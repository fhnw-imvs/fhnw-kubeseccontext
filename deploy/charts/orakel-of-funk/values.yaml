# Default values for orakel-of-funk.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
global:
  # This is for the secrets for pulling an image from a private repository more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
  imagePullSecrets: []


# This is to override the chart name.
nameOverride: ""
fullnameOverride: ""
namespaceOverride: ""

globalAnnotations: {}
globalLabels: {}

orakel:
  # This will set the replicaset count more information can be found here: https://kubernetes.io/docs/concepts/workloads/controllers/replicaset/
  replicaCount: 1

  # This sets the container image more information can be found here: https://kubernetes.io/docs/concepts/containers/images/
  image:
    registry: ghcr.io
    repository: fhnw-imvs/fhnw-kubeseccontext
    # This sets the pull policy for images.
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: 0.0.1

  # This section builds out the service account more information can be found here: https://kubernetes.io/docs/concepts/security/service-accounts/
  serviceAccount:
    # Specifies whether a service account should be created
    create: true
    # Automatically mount a ServiceAccount's API credentials?
    automount: true
    # Annotations to add to the service account
    annotations: {}
    # The name of the service account to use.
    # If not set and create is true, a name is generated using the fullname template
    name: ""

  # This is for setting Kubernetes Annotations to a Pod.
  # For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
  podAnnotations: {}
  # This is for setting Kubernetes Labels to a Pod.
  # For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
  podLabels: {}

  podSecurityContext:
    runAsNonRoot: true
    runAsUser: 2492
    runAsGroup: 2492
    fsGroup: 2492
    seccompProfile:
      type: RuntimeDefault

  securityContext:
    allowPrivilegeEscalation: false
    capabilities:
      drop:
      - "ALL"

  # This is for setting up a service more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/
  webhookService:
    # This sets the service type more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
    type: ClusterIP
    # This sets the ports more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#field-spec-ports
    port: 443
    annotations: {}
    labels: {}

  # This is for setting up a service more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/
  metricsService:
    # This sets the service type more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
    type: ClusterIP
    # This sets the ports more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#field-spec-ports
    port: 8443
    annotations: {}
    labels: {}

  resources: 
    limits:
      cpu: 500m
      memory: 128Mi
    requests:
      cpu: 10m
      memory: 64Mi

  # This is to setup the liveness and readiness probes more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
  livenessProbe:
    httpGet:
      path: /healthz
      port: 8081
    initialDelaySeconds: 15
    periodSeconds: 20
  readinessProbe:
    httpGet:
      path: /readyz
      port: 8081
    initialDelaySeconds: 5
    periodSeconds: 10

  # This section is for setting up autoscaling more information can be found here: https://kubernetes.io/docs/concepts/workloads/autoscaling/
  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80

  # Additional volumes on the output Deployment definition.
  volumes: 
  - name: cert
    secret:
      defaultMode: 420
      secretName: webhook-server-cert

  # Additional volumeMounts on the output Deployment definition.
  volumeMounts: 
  - mountPath: /tmp/k8s-webhook-server/serving-certs
    name: cert
    readOnly: true

  nodeSelector: {}

  tolerations: []

  affinity: {}

valkey:
  # This sets the container image more information can be found here: https://kubernetes.io/docs/concepts/containers/images/
  image:
    registry: ghcr.io
    repository: valkey-io/valkey
    tag: "8.1.3"
    pullPolicy: Always

  # This sets the resources for the Valkey container
  resources:
    requests:
      memory: "512Mi"
      cpu: "300m"
    limits:
      memory: "1Gi"
      cpu: "600m"

  # Environment variables for Valkey
  env:
    - name: ALLOW_EMPTY_PASSWORD
      value: "yes"

  service:
    # This sets the service type more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
    type: ClusterIP
    # This sets the ports more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#field-spec-ports
    port: 6379
    annotations: {}
    labels: {}

  podSecurityContext:
    runAsNonRoot: true
    runAsUser: 1001
    runAsGroup: 1001
    fsGroup: 1001
    seccompProfile:
      type: RuntimeDefault

  securityContext:
    allowPrivilegeEscalation: false
    capabilities:
      drop:
      - "ALL"

  livenessProbe:
    exec:
      command:
      - sh
      - -c
      - "valkey-cli ping | grep PONG"
    initialDelaySeconds: 15
    periodSeconds: 20
  readinessProbe:
    exec:
      command:
      - sh
      - -c
      - "valkey-cli ping | grep PONG"
    initialDelaySeconds: 5
    periodSeconds: 10

  storage:
    size: 1Gi
    # Persistent Volume Claim for Valkey
    pvc:
      enabled: true
      name: valkey-pvc
      accessModes:
        - ReadWriteOnce
      storageClassName: ""
      annotations: {}
      labels: {}